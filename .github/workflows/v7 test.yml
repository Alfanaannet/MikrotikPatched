name: v7 Test

on:
  workflow_dispatch:
permissions:
  contents: write

env:
  MIKRO_NPK_SIGN_PUBLIC_KEY: ${{ secrets.MIKRO_NPK_SIGN_PUBLIC_KEY }}
  MIKRO_LICENSE_PUBLIC_KEY: ${{ secrets.MIKRO_LICENSE_PUBLIC_KEY }}
  CUSTOM_NPK_SIGN_PRIVATE_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PRIVATE_KEY }}
  CUSTOM_NPK_SIGN_PUBLIC_KEY: ${{ secrets.CUSTOM_NPK_SIGN_PUBLIC_KEY }}
  CUSTOM_LICENSE_PRIVATE_KEY: ${{ secrets.CUSTOM_LICENSE_PRIVATE_KEY }}
  CUSTOM_LICENSE_PUBLIC_KEY: ${{ secrets.CUSTOM_LICENSE_PUBLIC_KEY }}

jobs:
  Build_ROS_v7:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Check latest version
      id: get_latest
      run: |
        echo $(uname -a)
        NEWEST="7.9.2 1684842540"
        LATEST_VERSION=$(echo "$NEWEST" | cut -d' ' -f1)
        BUILD_TIME=$(echo "$NEWEST" | cut -d' ' -f2)
        echo Latest Version: $LATEST_VERSION
        echo Build Time: $BUILD_TIME
        _LATEST_VERSION=$(cat latest.txt | cut -d ' ' -f1)
        curl -s -o CHANGELOG https://upgrade.mikrotik.com/routeros/$LATEST_VERSION/CHANGELOG
        cat CHANGELOG
        echo "NEWEST=${NEWEST}" >> $GITHUB_ENV
        echo "LATEST_VERSION=${LATEST_VERSION}" >> $GITHUB_ENV
        if [ "${{ matrix.arch }}" == "x86" ]; then
          ARCH='-x86'
        fi
        echo "ARCH=$ARCH" >> $GITHUB_ENV
        sudo apt-get update > /dev/null

    - name: Cache refind
      if:  matrix.arch == 'x86'
      id: cache_refind
      uses: actions/cache@v4
      with:
        path: refind-bin-0.14.2.zip
        key: refind

    - name: Get refind
      if:  steps.cache_refind.outputs.cache-hit != 'true' && matrix.arch == 'x86'
      run: sudo curl -s -o refind-bin-0.14.2.zip https://nchc.dl.sourceforge.net/project/refind/0.14.2/refind-bin-0.14.2.zip

    - name: Cache routeros-${{ env.LATEST_VERSION }}${{ env.ARCH }}.npk & all_packages${{ env.ARCH }}-${{ env.LATEST_VERSION }}.zip
      if:  matrix.arch == 'x86'
      id: cache_routeros_npk
      uses: actions/cache@v4
      with:
        path: |
          routeros-${{ env.LATEST_VERSION }}${{ env.ARCH }}.npk
          all_packages${{ env.ARCH }}-${{ env.LATEST_VERSION }}.zip
        key: routeros-${{ env.LATEST_VERSION }}-${{ matrix.arch }}

    - name: Get routeros-${{ env.LATEST_VERSION }}${{ env.ARCH }}.npk & all_packages${{ env.ARCH }}-${{ env.LATEST_VERSION }}.zip
      if:  steps.cache_routeros_npk.outputs.cache-hit != 'true' && matrix.arch == 'x86'
      run: |
          sudo curl -s -o routeros-$LATEST_VERSION$ARCH.npk https://download.mikrotik.com/routeros/7.9.2/routeros-7.9.2.npk
          sudo curl -s -o all_packages$ARCH-$LATEST_VERSION.zip https://download.mikrotik.com/routeros/7.9.2/all_packages-x86-7.9.2.zip

    - name: Patch routeros-${{ env.LATEST_VERSION }}${{ env.ARCH }}.npk & all_packages${{ env.ARCH }}-${{ env.LATEST_VERSION }}.zip
      if:  matrix.arch == 'x86'
      run: |
        sudo mkdir ./all_packages$ARCH-$LATEST_VERSION
        sudo unzip all_packages$ARCH-$LATEST_VERSION.zip -d ./all_packages$ARCH-$LATEST_VERSION/
        sudo cp routeros-$LATEST_VERSION$ARCH.npk routeros-$LATEST_VERSION$ARCH-patched.npk
        sudo -E python3 patch.py npk routeros-$LATEST_VERSION$ARCH.npk
        NPK_FILES=$(find ./all_packages$ARCH-$LATEST_VERSION/*.npk)
        for file in $NPK_FILES; do
            sudo -E python3 npk.py sign $file $file
        done
        cd ./all_packages$ARCH-$LATEST_VERSION
        sudo zip ../all_packages$ARCH-$LATEST_VERSION-patched.zip *.npk
        cd ..
        sudo rm -rf ./all_packages$ARCH-$LATEST_VERSION

    - name: Create Release tag ${{ env.LATEST_VERSION }}
      if: matrix.arch == 'x86'
      uses: softprops/action-gh-release@v2
      with:
        name: "RouterOS ${{ env.LATEST_VERSION }}"
        body_path: "CHANGELOG"
        tag_name: ${{ env.LATEST_VERSION }}
        make_latest: false
        files: |
          routeros-${{ env.LATEST_VERSION }}${{ env.ARCH }}-patched.npk
          all_packages*-${{ env.LATEST_VERSION }}-patched.zip
